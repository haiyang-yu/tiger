# Tiger configuration file sample, the file will not load.
tiger {
  # 工作目录
  home=${user.dir}

  # 日志配置
  log-level=INFO
  log-dir=${tiger.home}/logs
  log-conf-path=${tiger.home}/conf/logback.xml

  # 核心配置
  core {
    # 系统允许传输的最大包的大小
    max-packet-size=10k
    # 数据包启用压缩的临界值，超过该值后对数据进行压缩
    compress-threshold=10k
    # 最小心跳间隔
    min-heartbeat=60s
    # 最大心跳间隔
    max-heartbeat=120s
    # 允许的心跳连续超时的最大次数
    max-heartbeat-timeout-times=2
    # 用于快速重连的session 过期时间默认1天
    session-expired-time=1d
    # nio:jdk自带；netty:由netty实现
    epoll-provider=netty
  }

  # 安全配置
  security {
    # RSA 私钥
    private-key="MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAJMT6Mb5s4XAFYSqH+sfAhcDB35xFROcv65N8HiY513SmVDllLIB6ajefk6WCBENBLW/ZZnmdDXcCrjffM2eDJOptbvJBqTJdYqa5/eetSHLRmQjS2uhXIiKj8mjmxDivxFxpXSTc+AqISURm5oX1lZsgjiL8NIDuV8/yvqr5l7dAgMBAAECgYALvm463RthlaniMvdjfdFb5wkFJqBpNX30vBJ0frkSu8s0M3DBGff/XOy297HjMqfqn0LMnCMxXcWZZ3b+sB0O2fojG3MS7tHAqBb5gKs0WIbFICoPOu23wq0I/voAczw5PQom8SmbgnwVI2I2eZ93SydgUPLvIqofSQBhZ6wMHQJBAOR94PvLemA9H3ks9xxYEmPTksvHnkNpMEk4pFVv78RJBE2pp0W+n6ZzhWX4KZZkiH3q8df/M2/h6g0ejjrTkIcCQQCkyNmyXXCqclEdJmbquZFZgCQeRN8TpKWtRMSKVy+J9Hy3BNpmF6WUSDr4OwBjaQ1A5BtkfChbU3kniTriAiJ7AkEArehlSiBYF1HOV7NyrX8XGCXbcACSI6q3FrPm2CRncJVGkjnTV9E7wDvix3a3aIFCJdyhkA3sP3bKZovgI0QNlwJBAIE9yoh7guccPAQ531RP8PEacLmQ2MmmRA8utVuvX+i6aap90vFpsIMpV57jX72YYj236sgYHOrsAEUC+7zRYcsCQQDCBp5ZeoNMzCLaS3AkzB6QIGtiAmE2CNQXQqu6ctkDH31wykED0NHcyzrSSxzEPS01B+m0CmgjD82Wvz6Zz6aD"
    # RSA 公钥
    public-key="MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTE+jG+bOFwBWEqh/rHwIXAwd+cRUTnL+uTfB4mOdd0plQ5ZSyAemo3n5OlggRDQS1v2WZ5nQ13Aq433zNngyTqbW7yQakyXWKmuf3nrUhy0ZkI0troVyIio/Jo5sQ4r8RcaV0k3PgKiElEZuaF9ZWbII4i/DSA7lfP8r6q+Ze3QIDAQAB"
    # AES 秘钥长度
    aes-key-length=16
  }

  # 网络配置
  net {
    # 本地ip, 默认取第一个网卡的本地IP
    local-ip=""
    # 外网ip, 默认取第一个网卡的外网IP
    public-ip=""

    connect-server-bind-ip=""
    # 公网ip, 注册到zk中的ip, 默认是public-ip
    connect-server-register-ip=${tiger.net.public-ip}
    # 长链接服务对外端口, 公网端口
    connect-server-port=3000

    gateway-server-bind-ip=""
    # 本地ip, 注册到zk中的ip, 默认是local-ip
    gateway-server-register-ip=${tiger.net.local-ip}
    # 网关服务端口, 内部端口
    gateway-server-port=3001
    # 网关服务使用的网络类型tcp/udp/sctp/udt
    gateway-server-net=tcp
    # 239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效
    gateway-server-multicast="239.239.239.88"

    # UDP 客户端端口
    gateway-client-port=4000
    # 239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效
    gateway-client-multicast="239.239.239.99"
    # 网关客户端连接数
    gateway-client-num=1

    # 控制台服务端口, 内部端口
    admin-server-port=3002
    # websocket对外端口, 公网端口, 0表示禁用websocket
    ws-server-port=3003
    # websocket path
    ws-path="/"

    # tcp/udp 发送缓冲区大小配置
    snd-buf {
      connect-server=32k
      # 0表示使用操作系统默认值
      gateway-server=0
      gateway-client=0
    }

    # tcp/udp 接收缓冲区大小配置
    rcv-buf {
      connect-server=32k
      # 0表示使用操作系统默认值
      gateway-server=0
      gateway-client=0
    }

    # netty 写保护配置
    write-buffer-water-mark {
      connect-server-low=32k
      connect-server-high=64k
      gateway-server-low=10m
      gateway-server-high=20m
    }

    # 流量整形配置
    traffic-shaping {
      connect-server {
        enabled=false
        check-interval=100ms
        write-global-limit=0
        read-global-limit=100k
        write-channel-limit=3k
        read-channel-limit=3k
      }

      gateway-server {
        enabled=false
        check-interval=100ms
        write-global-limit=0
        read-global-limit=30k
        write-channel-limit=0
        read-channel-limit=3k
      }

      gateway-client {
        enabled=false
        check-interval=100ms
        write-global-limit=30k
        read-global-limit=0
        write-channel-limit=3k
        read-channel-limit=0
      }
    }
  }

  # Zookeeper配置
  zk {
    # 多台机器使用","分隔如："10.0.10.44:2181,10.0.10.49:2181"
    server-address="127.0.0.1:2181"
    namespace=tiger
    # zkCli.sh acl 命令 addauth digest mpush
    digest=tiger
    watch-path=/
    connection-timeout=5s
    session-timeout=5s
    retry {
      # initial amount of time to wait between retries
      base-sleep-time=3s
      # max number of times to retry
      max-retries=3
      # max time in ms to sleep on each retry
      max-sleep=5s
    }
  }

  # Redis集群配置
  redis {
    # single,cluster,sentinel
    cluster-model=single
    sentinel-master=""
    # 格式ip:port
    nodes=["127.0.0.1:6379"]
    password=""
    pool {
      maxTotal=8,
      maxIdle=4,
      minIdle=1,
      lifo=true,
      fairness=false,
      maxWaitMillis=5000,
      minEvictableIdleTimeMillis=300000,
      softMinEvictableIdleTimeMillis=1800000,
      numTestsPerEvictionRun=3,
      testOnCreate=false,
      testOnBorrow=false,
      testOnReturn=false,
      testWhileIdle=false,
      timeBetweenEvictionRunsMillis=60000,
      blockWhenExhausted=true,
      jmxEnabled=false,
      jmxNamePrefix=pool,
      jmxNameBase=pool
    }
  }

  # HTTP代理配置
  http {
    # 启用Http代理
    proxy-enabled=false
    # 每个域名的最大链接数, 建议web服务nginx超时时间设长一点, 以便保持长链接
    max-conn-per-host=5
    # 请求超时时间
    default-read-timeout=10s
    # response body 最大大小
    max-content-length=5m
  }

  # 线程池配置
  thread-pool {
    # 接入服务线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)
    conn-work=0
    # 网关服务线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)
    gateway-server-work=0
    # http proxy netty client work pool size，0表示线程数根据cpu核数动态调整(2*cpu)
    http-work=0
    # 处理ACK消息超时
    ack-timer=1
    # 消息推送中心，推送任务线程池大小, 如果为0表示使用Gateway Server的work线程池，tcp下推荐0
    push-task=0
    # 网关客户端线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)，该线程池在客户端运行
    gateway-client-work=0
    # 消息推送回调处理，该线程池在客户端运行
    push-client=2

    # 用户处理内部事件分发
    event-bus {
      min=1
      max=16
      # 大量的online，offline
      queue-size=10000
    }

    # 用户上下线消息, 踢人等
    mq {
      min=1
      max=4
      queue-size=10000
    }
  }
  # 推送消息流控：qps = limit/(duration)
  push-flow-control {
    # 针对非广播推送的流控，全局有效
    global {
      # qps = 5000
      limit=5000
      max=0
      duration=1s
    }

    # 针对广播消息的流控，单次任务有效
    broadcast {
      limit=3000
      max=100000
      duration=1s
    }
  }
}